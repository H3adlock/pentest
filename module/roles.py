from cloudbluepentest.core.intercept import CloudblueSession
from cloudbluepentest.core.urls import application_url, cloudblue_url_dict
from cloudbluepentest.core.html_parser import parsedHtml
from urllib.parse import urljoin
from decouple import config
from cloudbluepentest.utils.logger import module_logger, log
import pytest

module_log = module_logger(__name__)


def roleEdit(cb, payload, role_form_data):
    try:
        role_edit_page_url = cloudblue_url_dict['role_edit']
        log.info('GET: %s', role_edit_page_url)
        role_edit_page = cb.getRequest(
            role_edit_page_url)
        role_edit_page_html = parsedHtml(role_edit_page)
        role_edit_page_form = role_edit_page_html.find(
            name='form', attrs={'name': 'role-edit-form'})
        role_edit_page_save_url = urljoin(
            application_url, role_edit_page_form['action'])
        log.info('role_edit_page_save_url %s', role_edit_page_save_url)
        input_fields = role_edit_page_html.findAll('input')
        formdata = dict((field.get('name'), '' if field.get('value') is None else field.get('value'))
                        for field in input_fields)
        formdata['role.organizationType'] = role_form_data['role.organizationType']
        formdata['role.title'] = payload
        formdata['role.authorityLevel'] = role_form_data['role.authorityLevel']
        formdata['role.description'] = payload
        formdata['permission.187'] = role_form_data['permission.187']
        log.info('POST: %s formdata: %s' % (role_edit_page_save_url, formdata))
        role_post_request = cb.postRequest(
            role_edit_page_save_url, formdata)

    except Exception as e:
        module_log.error(e)
        pytest.fail(e)


def role_save_verify(cb, role_form_data):
    try:
        role_list_page_url = cloudblue_url_dict['role_list']
    except Exception as e:
        pass
