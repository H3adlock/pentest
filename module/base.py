from cloudbluepentest.core.intercept import CloudblueSession
from cloudbluepentest.core.urls import application_url, cloudblue_url_dict
from cloudbluepentest.core.html_parser import parsedHtml
from urllib.parse import urljoin
from decouple import config
from cloudbluepentest.utils.logger import module_logger, log
import pytest

module_log = module_logger(__name__)


def newSession():
    try:
        log.info('Initiating Session')
        cb = CloudblueSession()
        module_log.debug('CloudblueSession: %s', cb)
        return cb
    except Exception as e:
        log.critical('Unable to initiate session')
        module_log.critical(e)
        # pytest.fail(e)


def login(cb, username, password):
    try:
        login_url = cloudblue_url_dict['login_url']
        log.info('GET: %s', login_url)
        login_page = cb.getRequest(login_url)
        login_page_html = parsedHtml(login_page)
        login_form = login_page_html.find_all(
            name='form', attrs={'name': 'loginform'})[0]
        csrf_form = login_page_html.find_all(
            name='form', attrs={'name': 'CSRFForm'})[0]
        login_fields = login_form.findAll('input')
        csrf_fields = csrf_form.find_all('input')
        formdata = dict((field.get('name'), field.get('value'))
                        for field in login_fields)
        formdata.update((field.get('name'), field.get('value'))
                        for field in csrf_fields)
        formdata['username'] = username
        formdata['password'] = password
        formdata['eas_sec_canv'] = config('eas_sec_canv')
        login_post_url = urljoin(login_url, login_form['action'])
        log.info('POST: %s formdata: %s' % (login_post_url, formdata))
        login_post_request = cb.postRequest(login_post_url, formdata)
        cb.getCookies()
    except Exception as e:
        module_log.error(e)


def closeSession(cb):
    try:
        module_log.debug('del: %s', cb)
        del(cb)
    except Exception as e:
        module_log.critical(e)
